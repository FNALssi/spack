FILE = Table
PRODUCT = {{spec.name}}

<<<<<<< HEAD
<<<<<<< HEAD
FLAVOR=ANY
=======
FLAVOR=""
>>>>>>> trying to hook it all up
=======
FLAVOR=ANY
>>>>>>> now with flavor and qualifier conversions and basic dependencies, still need same on dependencies
QUALIFIERS=""

Action = setup
    prodDir()
    setupEnv()
{% for package in spec._dependencies.keys() %}
    setupRequired({{package}} {%for c in (spec|string).split('^')%} {%if c.split('@')[0] == package%} {{c.split('@')[1].split('%')[0]}}{%endif%} {%endfor%} -f ${UPS_PROD_FLAVOR})
{% endfor %}

{% block environment %}
{% for command_name, cmd in environment_modifications %}
{# A non-standard separator is required #}
{% if command_name == 'PrependPath' %}
    PathPrepend({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}", "{{cmd.separator}}")
{% elif command_name == 'AppendPath' %}
    PathAppend({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}", "{{cmd.separator}}")
{% elif command_name == 'RemovePath' %}
    PathRemove({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}", "{{ cmd.separator }}")
{% elif command_name == 'SetEnv' %}
    EnvSet({{ cmd.name }}, "{{ cmd.value|replace(spec.prefix,'${UPS_PROD_DIR}') }}")
{% elif command_name == 'UnsetEnv' %}
    EnvUnset({{ cmd.name }})
{% endif %}
{#  #}
{% endfor %}
{% endblock %}

{% block footer %}
{# In case he module needs to be extended with custom TCL code #}
{% endblock %}
